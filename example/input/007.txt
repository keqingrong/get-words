

Search on Graphic Design…


1

Graphic Design
QUESTIONS

TAGS

USERS

BADGES

UNANSWERED

What’s the right character for an apostrophe?
up vote
49
down vote
favorite
13
Many times I encounter the so called "typewriter apostrophe" (Unicode character U+0027 and HTML symbol &apos;) to represent an apostrophe:

typewriter apostrophe

But on the other hand, the "right single quotation mark" (Unicode character U+2019 and HTML symbol &rsquo;) is also used instead:

right single quotation mark

I wonder now, which of them is the right one and should be used in typography?

Note: The sans-serif typeface Arial was used in both examples.

typography typesetting character
shareedit
edited Feb 20 '16 at 21:23
asked Feb 10 '16 at 20:55

elegent
725424
If your intent is to write in France French, then definitely use the second with a narrow non‑breaking space before the question mark. – user2284570 Feb 12 '16 at 12:35
narrow non-breaking space is U+202F and is 1/3em - even more "visually correct" would be 1/8em "thin space" U+2009, but "thin space" is not marked as non-breaking (I am hearing that InDesign does tread it automatically as non-breaking.) – Martin Zaske Apr 20 '17 at 8:32
add a comment
7 Answers
active oldest votes
up vote
64
down vote
accepted
It Started Curved
The apostrophe first appeared in the printed universe in Italy, 16th century, as a curved shape to signify elision copied from handwritten classical Italian poetry. The apostrophe was equivalent to our "Gotchas" or "Wannas" in the sense that it was a way to take the stiffness of the text away by making it sound more human-like.

Here is an example of one of the first times the apostrophe was printed. It is from "Le cose volgari di messer Francesco" an Italian classic written by Petrarch, published by Aldus Manutius in Italy circa 1501.

enter image description here

Aldus Manutius supposedly copied this book from an original manuscript of Petrarch owned by a friend of his. He had a special typeface designed based on the handwriting of the poet, creating the slanted style we nowadays know as "italics." He had to introduce the apostrophe glyph in order to be able to copy the text exactly the way the poet had written it. Notice the apostrophe in the word(s) "l'honorata". Notice it had the curved shape.

It got Fashionable
This innovative "Italic" type and the colloquial stylish way of indicating elisions as a cute small mark gained immediate fame. Even when the typeface was protected by the Pope himself it started being illegally copied by counterfeiting artists. Copies of the book were printed in Lyon using a pirate copy of the typeface with apostrophe and all.

In 1501 Geoffroy Tory published Campoflori, a book that revolutionized French grammar and book publishing. It introduced, among other things, the apostrophe, copying the new fashionable Italian way of considering elisions stylish. This is an excert from the book. Notice the curved apostrophe.

enter image description here

In the same century and for the same reasons, the English language imported the apostrophe from French.

It got Straight
The apostrophe stopped being a novelty and became part of regular grammar. It kept its curved shape in printed texts. The straight apostrophe-like glyph, on the other hand, had different functions, such as denoting "prime". In handwritten documents, though, sometimes it was stylized as a straight tick (see Yorick's comment bellow).

With the invention of the typewriters and keyboards (1860s), the engineers were faced with the problem of fitting many characters (keys) in a small space. They came up with the idea of unifying similar looking characters in order to save space. Instead of having the left, right and straight "apostrophes" they decided to include only the straight one. Similar decisions were made about other characters common in typesetting such as the em dash and the en dash.

https://en.wikipedia.org/wiki/Typewriter#Typewriter_conventions

This reduced set of characters was codified in the world's first binary character set, the 5-bit Baudot code (1870). The set also included the straight double quotation as a single character. 7-bit ASCII inherited the same character set.

Since then all typed (and telegraphed) text was set using only the straight quotation marks. Curly ones were used only in traditional typeset text.

It got Ambiguous
It was only with the popularization of word processor systems that the curly apostrophes were reintroduced into the digital world. Systems like Word offered the feature to automatically substitute the straight apostrophe with curly quotation marks based on the context. It was the user's option to do so, though, and not all word processors had the feature. To add to the confusion, the standard keyboards did not include the curly quotation marks, so it was very hard for the regular user to type them intentionally.

When Unicode was created, one of the design principles was to "unify" characters. Characters from different scripts or languages that looked similar were to be unified and simplified as a single one. You would think they would have gone back to the origin and get rid of the straight apostrophe. Now, by this point, the confusion and liberal use of the straight and curly apostrophes and quotation marks was so big that Unicode decided to include both.

The Apostrophe Today
So, as it is today, both (the curly and the straight apostrophe) are accepted as an apostrophe and quotation mark, but there are some considerations:

If the intention of the text is to make it look as if it was traditionally typeset, then always use curly ones, as it was originally. Keep the straight one to denote prime.

Using the straight apostrophe and quotation can be a way of implying a digital mood to your document, the same way characters of the same width imply that the text was typed in a typewriter or console.

If the text is digital and to be consumed by human eyes, both (the curly and the straight apostrophe) are accepted as an apostrophe and quotation mark. Here schools differ and schism rules. We keep on with the expressive mess. Just be consistent within the same document.

If the intention of the text is to be semantically correct (as if you want a computer to be able to parse the semantics of the text), then you should pay close attention to Unicode's definition of the characters. U+0027 (the one that can be typed with the keyboard) is named "APOSTROPHE". Although that hints that it could be a good candidate to represent apostrophes, notice that Unicode is kind of ambiguos about this character indicating that, at least in English language, U+2019 is the preferred one for apostrophes. I personally think this goes against their principle of unification. You would expect that the apostrophe would be the same independently of the language in which it is used. Add to that the fact that they classify the apostrophe as "punctuation" which in French could be awkwardly accepted but in English makes no sense whatsoever. You are left, then, with the quandary of either using different apostrophes for different languages or using the controversial one for the English language. Discussions about which one is the correct one can get very passionate. On the other hand, it seems quite clear that U+2019 (and never the straight one) should be used as a right quotation mark. By the same token U+2032 should be used to denote prime, and U+02BC should be used to denote a modifier letter apostrophe (such as in the glottal stop of the Cockney pronunciation of bu'er or the transcription of "uh'oh").

Please notice that even if you select or type the correct character, the font you use might render it in a curly or straight fashion.

shareedit
edited Feb 12 '16 at 18:40
answered Feb 10 '16 at 22:03

cockypup
7,0472050
7
Note: The reverse of U+02BC is U+02BB, the Hawaiian ʻOkina, as in the name "Hawaiʻi" itself. – usr2564301 Feb 10 '16 at 23:03
6
"When Unicode was created, one of the design principles was to "unify" characters. Characters from different scripts or languages that looked similar were to be unified and simplified as a single one." - do you have a source for this? There are tons and tons of examples of Unicode having multiple characters that look identical, but I'm not aware of any examples where Unicode took similar characters and made them one. – user2357112 Feb 11 '16 at 20:39
6
The name of a Unicode character is NOT its definition! The current policy is that names cannot be changed; therefore, there are many Unicode characters that have misleading or flat out wrong names. You should look at the comments instead to see how it should be used. And the comments state unambiguously that U+2019 is more semantically correct for representing an apostrophe than U+0027. – sumelic Feb 11 '16 at 22:42
3
You might disagree with the Unicode committee, but it's not a valid argument to refer to the name; instead, use arguments like in this post here: Which Unicode character should represent the English apostrophe? (And why the Unicode committee is very wrong.) – sumelic Feb 11 '16 at 22:46
3
Straight apostrophes ' are different from primes ʹ. – Andrew Leach Feb 18 '16 at 9:48
show 13 more comments
up vote
23
down vote
Did a bit of research to make sure, but in general "proper" typography doesn't use straight quotes, single or double. Here's a handy guide for the commands and HTML entities for single/double curly quotes.

Typewriters are also responsible for the introduction of ‘straight quotes’, non-specific quote marks designed as a space-saving measure for the keyboard, avoiding the need for separate opening and closing quote marks. Straight quotes are commonly used in place of proper quotation marks or ‘curly quotes’. Many designers will tell you that straight quotes are used to represent feet and inches, but in reality, feet and inches should be represented using primes. Straight quotes are obsolete and should not be used.

From Typographic Literacy: Part Two (KA+A)

Dumb quotes

shareedit
answered Feb 10 '16 at 21:37

johnkeese
35914
1
Well, an apostroph is only one sign, a single quote means two sign, one starting and one closing sign. Which glyph is used for theese signs depends on the used font and the glyphs the font gives you for the typografical signs ... – Kurt Feb 10 '16 at 21:49
4
Nicely put. But the OP was asking about the apostrophe, not about the quotation marks. – cockypup Feb 12 '16 at 16:44
add a comment
up vote
15
down vote
The Unicode Standard comments on U+2019 (’):

this is the preferred character to use for apostrophe

As far as what is right encoding-wise, I cannot think of a higher authority.

Also, the typographical conventions of most languages do not use U+2019 for other purposes or only as secondary quotation marks. In fact, British English is the only major language using this character as a primary quotation mark. Thus, there is no big need to use U+0027 (or any other character) for the sake of distinction here.

Typographically, there are three approaches to determining what is “right”:

What people are used to – While in classical and professional typesetting people are primarily exposed to the curly apostrophe, the typewriter apostrophe dominates digital texts. There is no good answer here.

What fits the general character of the typeface without significantly impeding readability – This somewhat depends on the typeface. Let’s look at some examples:

enter image description here

In all examples the apostrophe in Don’t is U+2019 and the apostrophe in amn’t is U+0027. First note how both characters differ over the typefaces.

The first example is a light sans-serif font. It is far from ornamental and a curly apostrophe would be out of place. Consequently, U+2019 is only slightly tilted. The straight U+0027 fits the typeface’s simple character also quite well.

Round forms obviously are a major paradigm of the typeface in the second example. Consequently, U+2019 is curly. U+0027 is designed to avoid any sense of direction (presumably to be also usable as an opening quotation mark) and hence curves. Also it is rather small, presumably a trade-off between avoiding to disturb the character of the typeface with a big character and impeding readability with a tiny character. If you ask me, the trade-off is too tiny, but that’s only the symptom – the actual problem is the trade-off, which can be avoided by using a curly apostrophe, which fits the typeface much better.

In classical serif typefaces as in the third example, the width of a stroke mainly depends on the angle (which has its origins in calligraphy). Straight vertical lines are usually ended with serifs. This is not an option for the apostrophe and hence U+0027 uses a droplet-like shape, and thus breaks the typeface’s character (in my opinion). Admittedly, the same applies to the exclamation mark, but at least that character shall disturb anyway. The curly U+2019 fits the character of the typeface much better in my opinion.

The last typeface is even more calligraphic, but its character offers another way of designing purely vertical elements. Thus U+0027 is not as disturbing and differs not as much from U+2019.

To summarise this point: It depends on the font, but a properly designed U+2019 should never be worse than U+0027, even if the latter is well designed. This is little surprising because the type designer is more flexible to shape U+2019 to match the rest of the typeface, as there is no symmetry required.

What is best for readability on the long run – Using the same character for many purposes is arguably not good for readability. Thus, if we assume British typesetting conventions unchanged otherwise, a straight apostrophe has the advantage of being distinguishable from the curly closing quotation mark. However, this convention (use U+0027 for the apostrophe and U+2019 for the single closing quotation mark) is even more difficult to establish than establishing the use of curly quotation marks and apostrophes in the digital world.

In many other languages, this would make little sense as U+2019 is not used as a quotation mark anyway. In languages like German which use the turned U+2018 (‘, the English single opening quotation mark) as a quotation mark, having two opposite curls or inclinations (depending on the typeface) often makes for a better distinction – at least in my opinion.

shareedit
edited Apr 20 '17 at 8:23
answered Feb 11 '16 at 10:22

Wrzlprmft♦
9,65733564
Nice answer! :D You are right U+2019 isn’t used for quotation marks in the German language: „ ... “ On the other hand I still wonder why there is no U+2019 key on the German/Austrian keyboard. – elegent Feb 20 '16 at 21:40
add a comment
up vote
8
down vote
First, some history.

Curly quotes and apostrophes were the original style. They are also called Printer's quotes and apostrophes.

Straight quotes and apostrophes came along with the typewriter. The typewriter being a mechanical device with limitations decided that it made more sense to use one set of straight marks instead of two separate sets of curly marks (for open and close single and double quotes).

To add further to the confusion, Primes are also a character that looks like an angled straight apostrophe. Primes are used for minute/second markings (as well as other scientific, mathematical and music notation). Again, the typewriter's straight apostrophes were also able to be used for these.

All that said, some typefaces are only designed with straight apostrophes and quotes for stylistic reasons.

In summary: always use the curly version for actual quote and apostrophe marks unless you are a) using a typewriter from 1954 or b) you have stylistic reasons for using the straight ones

shareedit
answered Feb 11 '16 at 19:51

DA01
46.1k262138
A very nice overview :) I haven’t heard of the term "Printer's quotes" before... And I’ll bet you anything that 99 percent will use the (wrong) straight apostrophe to write the " ’s " :D – elegent Feb 20 '16 at 22:01
add a comment
up vote
4
down vote
There is one item that all the answers so far have not mentioned. On a command line interface or in a programming language, the apostrophe (UTF-8 character 27) is the only valid choice.

The use of U+2019 with cause syntax errors when you do a cut and paste. With the automatic translation of the character 27 to U+2019, it now means that copying command lines from Word documents (or some Wikis/web pages) will throw errors that will cause many people to get confused until this issue is pointed out. It can also cause compiler/interpreter errors that make not sense.

When writing technical documents with code and/or command line samples, be careful to make sure that all of the samples created use character 27 and not the higher value one.

shareedit
answered Feb 11 '16 at 23:56

Walter
1492
1
Out of curiosity...is there ever a need for apostrophes in code or command lines? I don't know a lot of coding languages, but I can't think of any instance where there's a need for an apostrophe. – DA01 Feb 12 '16 at 19:18
4
@DA01 C-like languages (such as C, C++, Java, C#) use U+0027 to indicate single-character literals: 'a' is the single-character literal "a". (This is in contrast to a string containing just the letter a, which uses U+0022: "a" is a string containing just the letter "a".) Some languages, like Javascript, allows single and double quotes to be used interchangably (but you have to pick either one for a particular string). Other languages (such as Pascal, Ada, SQL) use U+0027 to indicate string literals: in SQL, 'a' is a string containing just the letter "a". – Michael Kjörling Feb 12 '16 at 20:00
4
As you can see, many languages do make a distinction between single-character literals and strings consisting of just a single character. Both have valid uses, and both are regularly used in many situations. Now, whether this means that there's a need for an apostrophe can obviously be discussed, but some way to indicate the difference to the compiler or interpreter is needed in any language that does make the distinction, and many languages have settled on the pair " and ' one way or the other. – Michael Kjörling Feb 12 '16 at 20:03
1
Automatic typographers quotes can be hell in tutorials. – joojaa Feb 12 '16 at 21:10
1
@MichaelKjörling ah, semantics, perhaps, but we're talking single quotes there rather than an apostophe. – DA01 Feb 13 '16 at 16:13
show 3 more comments
up vote
3
down vote
I work in a research centre and we commonly use fairly large French and German corpora (fairly recent ones). In the French corpus the straight apostrophe ' appears at about 4 times the amount of the curly apostrophe ’. In the German one the straight one ' is non existant and only the curly ’ can be found. The variation in the French corpus could actually be due to the straight ' being commonly used in typed texts and the curly ’ being mostly from copy/paste texts that are put online. On the other hand German sources appear to solely use the curly ’. Some consideration should also be put into the fact that an apostrophe is much more common in French than in German.

shareedit
answered Apr 20 '17 at 8:13

user92497
311
The question was about which is "the right one to use". Now your input about real existing texts is interesting. I love France and the fact that they somehow use more of the straight than the curly does indirectly confirms that the curly ones would be the "proper ones to use" (wink wink)... Yesterday I ordered two real-paper-print-books about typography rules for French (as recommended in another thread), so soon I will know even more. – Martin Zaske Apr 20 '17 at 8:39
add a comment
up vote
0
down vote
The right character to put in published text as an apostrophe is the UTF-8 character U+2019, the right single quotation. That is the only character that will give you the result you want, which is a book-level typography apostrophe. When you are using a writing tool that does “smart quotes” and you press the apostrophe key the tool will insert UTF-8 character 2019.

The UTF-8 character U+02BC modifier letter apostrophe is a tiny apostrophe for pronunciations. It won’t look right in the context of writing “can’t.”

The UTF-8 character U+0027 apostrophe is a “programmer’s apostrophe.” It is left over from the dawn of computing when computers only had 127 characters and were designed for writing computer programs, not producing book-level typography. The first 127 characters of UTF-8 are those same original 127 characters, and the computer keyboard is essentially unchanged, so this bad typography lives on and on and on.

The reason this bug lives on is that people who come from a computer heritage don’t necessarily see programmer apostrophes as bugs. People who come from a publishing heritage do. But it is the computer people who design the computers. That is no excuse for not using correct typography in published text. We have text substitutions today, we have many ways around it.

Ideally, writers should be using tools that don’t let them type programmer’s apostrophes, because they are just putting a bug into their UTF-8 manuscript. Sure, editors will fix it, but the fix-it-later attitude leads many times to publishing bugs.

So if you have a manuscript of any kind — book, short story, article — and it has programmer’s apostrophes in it, you should replace them with UTF-8 character 2019 before publishing.

Same goes for programmer’s quotes. Good writing tools should not let the writer type them, they should be typing proper quotation marks, especially because these are harder to fix in editing and lead to even worse readability if they are not fixed, as compared to apostrophes.

As a writing tool example, you can look at BBEdit, which is a text editor that goes back decades on the Mac. If you create a programming document (HTML or other language) and press the apostrophe key, you get a programmer’s apostrophe. If you create a writing document (plain text or Markdown) and press the apostrophe key, you get UTF-8 character 2019. Same goes for quotes. In programming documents, you get the programmer’s quotes. In writing documents, you get real quotation marks, both the opening and closing quotations as you type. This is the best way to put in quotation marks because the tool can do the proper open-quote and closed-quote as the writer is writing. No ambiguity is put in there in the first place so it has to be fixed later (or not.)

shareedit
edited Feb 17 '16 at 22:44

Martin Schröder
175214
answered Feb 11 '16 at 21:19

Simon White
1,752211
4
There is an exception to your rule. When writing code or command line samples in written documents, the programmers's apostrophe is the correct value (the others will cause syntax errors). Blanket bans or replacements will break the commands/samples. Therefore the character has to be allowed for technical publishing that displays code or command line samples. – Walter Feb 12 '16 at 0:02
1
So just because I'm writing in Markdown, BBEdit says I shouldn't be using U+0027? Lots of people over on Stack Overflow might feel that something like that is, shall we say, less than optimal. – Michael Kjörling Feb 12 '16 at 20:07
5
It took me a while to figure out why the hell you were talking about U+8217: CJK Unified Ideograph store, shop. Please use hexadecimal for Unicode characters, i.e., U+2019 in your case or at the very least inform the reader about your non-standard notation. – Wrzlprmft♦ Feb 13 '16 at 7:18
2
Also, they're not UTF-8 characters but Unicode or UCS characters. UTF-8 is just a way of transforming a codepoint into bytes. So for instance U+2019 becomes three UTF-8 bytes, which in hex are written e2 80 99 and in decimal 226 128 153. – deltab Feb 15 '16 at 4:26
add a comment
Your Answer
Links Images Styling/Headers Lists Blockquotes Code HTML advanced help »


Not the answer you're looking for? Browse other questions tagged typography typesetting character or ask your own question.
asked

2 years, 1 month ago

viewed

8,865 times

active

10 months ago

BLOG
The 2018 Developer Survey Results are Live
FEATURED ON META
Planned maintenance scheduled for March 17, 2018 at 13:00 UTC (9AM US/Eastern)
Ch-ch-ch-changes: Left nav, responsive design, & themes
Why do how-to requests bother you?
What to do with tutorial requests? — part II
Get the weekly newsletter! In it, you'll get:

The week's top questions and answers
Important community announcements
Questions that need answers
see an example newsletter

Related
42
“Serifs improve fast, easy readability for long text” - myth or truth?
4
In typography what is an open counter?
10
How do you present typeface options to your team during a rebranding
14
What are the origins of terms “em” and “en” as typographic units?
15
What’s the right character for a minus sign?
5
Is kerning also applied when there is a space between characters?
7
What are the origins of the commercial minus sign (⁒)?
4
Why is an el­lip­sis represented by one single character rather than a sequence of kerned dots?
20
Which typeface is suitable for marking of wires?
7
How to correctly choose protrusion for letters and hanging punctuation?
Hot Network Questions
Can I deduct a donation of a car I received as a gift?
How to ask for a wish from a woman?
A Brand New, Festive Rebus!
Equivalent English phrase for "don't roll around where you've fallen"
How to cross wires in Illustrator?
How do I answer the question "why are you vegan?" honestly, without making them resent me?
Was there a nuclear explosion in Germany during WW2?
Do I need to supply IPC documents to PCB fab house?
Is probability theory the study of non-negative functions that integrate/sum to one?
How to avoid angry stares
equation alignment in table, different column width
What is the meaning of multicellularity?
How to make sure humans do not know the meteorological phenomenon rainbow?
Why are turbolasers called "lasers" when they appear to be scaled-up blasters?
How to deal with excluding my son from the favourite activity of his peers?
Does carrying/dragging a willing/unconscious creature cause half movement as per the grapple rules?
What are the rules of the locative case?
Duck, duck, goose!
A very basic question about the derivative of a quotient
Possible to fly a B-24 under Bixby Bridge?
Why underpromote in this KNNP-KR endgame?
How can a mathematician handle the pressure to discover something new?
How to stop players from making the game X-rated
How to add the Alt+Backspace macOS typing functionality to Windows
 question feed
GRAPHIC DESIGN
Tour
Help
Chat
Contact
Feedback
Mobile
COMPANY
Stack Overflow
Stack Overflow Business
Developer Jobs
About
Press
Legal
Privacy Policy
STACK EXCHANGE
NETWORK
Technology
Life / Arts
Culture / Recreation
Science
Other
Blog Facebook Twitter LinkedIn
site design / logo © 2018 Stack Exchange Inc; user contributions licensed under cc by-sa 3.0 with attribution required. rev 2018.3.14.29426
